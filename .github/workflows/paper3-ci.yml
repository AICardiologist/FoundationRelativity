name: Paper 3 Framework CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      # Cache elan installation and toolchains
      - name: Cache elan
        uses: actions/cache@v4
        with:
          path: |
            ~/.elan
            ~/.cache/elan
          key: ${{ runner.os }}-elan-${{ hashFiles('lean-toolchain') }}

      # Install elan (Lean toolchain manager)
      - name: Install elan
        run: |
          curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y
          echo "$HOME/.elan/bin" >> $GITHUB_PATH

      - name: Verify Lean version  
        run: lean --version

      # Cache Lake build artifacts for faster builds
      - name: Cache Lake build
        uses: actions/cache@v4
        with:
          path: |
            .lake
          key: ${{ runner.os }}-lake-${{ hashFiles('lean-toolchain', 'lake-manifest.json') }}
          restore-keys: |
            ${{ runner.os }}-lake-

      - name: Build Paper 3 Framework
        run: |
          lake build Papers.P3_2CatFramework.Core.Prelude
          lake build Papers.P3_2CatFramework.Basic
          lake build Papers.P3_2CatFramework.Core.CoherenceTwoCellSimp

      - name: Guard vacuity regressions
        run: ./scripts/guard_vacuity.sh

      - name: Compile core tests
        run: |
          lake env lean Papers/P3_2CatFramework/test/Interp_simp_test.lean
          lake env lean Papers/P3_2CatFramework/test/TwoCell_simp_test.lean

      - name: Check for unauthorized sorries
        run: |
          # Allow sorries only in Blueprint/, FunctorialObstruction.lean, and documentation/
          disallow=$(grep -a -R -n --include="*.lean" -E 'sorry|admit' Papers/P3_2CatFramework \
                     | grep -v 'Blueprint\|FunctorialObstruction\|documentation')
          if [ -n "$disallow" ]; then 
            echo "❌ Unauthorized sorry/admit found:"
            echo "$disallow"
            exit 1
          else
            echo "✅ No unauthorized sorries found"
          fi

      - name: Verify non-trivial placeholders  
        run: |
          # Ensure key placeholders remain non-trivial (no constructors)
          if grep -a -R --include="*.lean" -E 'PentagonHolds.*where|AssocHolds.*where|CategoricalObstruction.*where' Papers/P3_2CatFramework/Core/ Papers/P3_2CatFramework/Basic.lean; then
            echo "❌ Found placeholders with constructors - should be empty inductives"
            exit 1
          else  
            echo "✅ All placeholders remain non-trivial"
          fi