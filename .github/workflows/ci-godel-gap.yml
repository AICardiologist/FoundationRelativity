name: Gödel-Gap CI

on:
  push:
    branches: [feat/godel-gap]
  pull_request:
    branches: [main]
    paths:
      - 'SpectralGap/GodelGap.lean'
      - 'test/GodelGapProofTest.lean'
      - 'docs/*godel*'

env:
  LEAN_ABORT_ON_SORRY: 1
  BUILD_TIMEOUT_SECONDS: 60

jobs:
  godel-gap-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Lean
        uses: leanprover/lean-action@v1
        with:
          use-mathlib-cache: true
          build-args: "-K 400000"

      - name: Cache .lake
        uses: actions/cache@v3
        with:
          path: |
            ~/.lake
            .lake/build
          key: ${{ runner.os }}-lake-godel-${{ hashFiles('lakefile.lean', 'SpectralGap/GodelGap.lean') }}

      - name: Build Gödel-Gap module
        timeout-minutes: 1  # Should compile in <5s
        run: |
          echo "🧪 Building Gödel-Gap pathology (ρ ≈ 4½-5)..."
          time lake build SpectralGap.GodelGap
          echo "✅ Gödel-Gap module built successfully"

      - name: Verify no 'sorry' in Gödel-Gap
        run: |
          if grep -r "sorry" SpectralGap/GodelGap.lean; then
            echo "❌ Found 'sorry' in GodelGap.lean!"
            exit 1
          fi
          echo "✅ No sorry statements found"

      - name: Check operator properties
        run: |
          echo 'import SpectralGap.GodelGap
          #check SpectralGap.godelOp
          #check SpectralGap.norm_u
          #check SpectralGap.godelOp_bounded
          #check SpectralGap.godelOp_rank_one' | lake env lean --stdin

      - name: Monitor build performance
        if: always()
        run: |
          echo "📊 Build Performance Report"
          echo "Module: SpectralGap.GodelGap"
          echo "Expected: <5s, Timeout: 60s"
          if [ -f .lake/build/trace ]; then
            echo "Build trace:"
            tail -20 .lake/build/trace || true
          fi

  godel-gap-tests:
    needs: godel-gap-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only on direct pushes
    steps:
      - uses: actions/checkout@v4

      - name: Set up Lean
        uses: leanprover/lean-action@v1
        with:
          use-mathlib-cache: true
          build-args: "-K 400000"

      - name: Run Gödel-Gap proof tests
        continue-on-error: true  # Tests may not exist yet
        run: |
          if [ -f test/GodelGapProofTest.lean ]; then
            echo "Running Gödel-Gap proof tests..."
            lake exe GodelGapProofTests || echo "Tests not yet implemented"
          else
            echo "Test file not found - will be added in Day 7"
          fi

      - name: Summary
        run: |
          echo "## Gödel-Gap Sprint 37 Status"
          echo "- Day 1: ✅ Operator definition complete"
          echo "- Day 2-7: 🚧 Analytic lemmas and proofs pending"
          echo "- Target: Π⁰₂-reflection (ρ ≈ 4½-5)"