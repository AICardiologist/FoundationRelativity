/-
  Fibrant‚Äëreplacement stub for simplicial objects in `Type u`.
-/
import Mathlib.CategoryTheory.Simplicial
import Mathlib.CategoryTheory.Functor
import Mathlib.CategoryTheory.NatIso

open CategoryTheory

universe u

/-- Abbreviation: the (large) category of small simplicial sets. -/
abbrev SSet := SimplicialObject (Type u)

/-- A **fibrant‚Äëreplacement functor** on simplicial sets *up to axioms*. -/
structure FibRep where
  obj        : SSet ‚•§ SSet
  Œ∑          : ùü≠ SSet ‚ü∂ obj
  fib        : ‚àÄ X : SSet, True           -- placeholder "X is Kan"
  Œ∑_is_we    : ‚àÄ X : SSet, True           -- placeholder "Œ∑_X is weak eqv"

namespace FibRep
/-- A *stub* fibrant replacement obtained by identity functor. -/
def identityFibRep : FibRep := by
  refine { obj := ùü≠ _, Œ∑ := NatTrans.id _, fib := ?_, Œ∑_is_we := ?_ } <;> intro X <;> trivial
end FibRep